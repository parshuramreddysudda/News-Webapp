{"ast":null,"code":"var _jsxFileName = \"/Users/vishnu/Desktop/react/news-webapp/src/components/weather-rep.components.jsx\";\nimport React from 'react';\nimport './weather-rep.scss';\nimport Weather from \"./weather\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Form from \"./form\";\nconst API_KEY = \"c6495ff8b8839c36a2991986616d8307\"; // wolframwapha AppID=888UUR-X3TPQ8UGYP\n//https://api.ipify.org?format=json\n//curl https://ipapi.co/8.8.8.8/latlong/\n//http://ip-api.com/json/24.48.0.1\n\nclass Weatherrep extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const ip_api_call = await fetch(`https://api.ipify.org?format=json`);\n      const ip_response = await ip_api_call.json();\n      console.log(ip_response);\n      const ip = this.state.ip;\n      const det_api_call = await fetch(`http://ip-api.com/json/${ip}`);\n      const det_response = await det_api_call.json();\n      console.log(det_response); // const city = \n      // const country = \n      // if( city && country ) {\n      // const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}`);\n      // const response= await api_call.json();\n      // console.log(response);\n\n      this.setState({\n        //   city: `${response.name},${response.sys.country}`,\n        //   lat: response.coord.lat,\n        //   long: response.coord.lon,\n        //   celsius: this.calCelsius(response.main.temp),\n        //   temp_min: this.calCelsius(response.main.temp_min),\n        //   temp_max: this.calCelsius(response.main.temp_max),\n        //   description: response.weather[0].description,\n        lat: undefined,\n        long: undefined,\n        city: undefined,\n        country: undefined,\n        icon: undefined,\n        main: undefined,\n        celsius: undefined,\n        temp_max: undefined,\n        temp_min: undefined,\n        description: \"\",\n        error: false,\n        ip: ip_response.ip\n      });\n    };\n\n    this.state = {\n      lat: undefined,\n      long: undefined,\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      err: false,\n      ip: undefined\n    };\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n    this.getWeather();\n  }\n\n  get_WeatherIcon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({\n          icon: this.weatherIcon.Thunderstorm\n        });\n        break;\n\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({\n          icon: this.weatherIcon.Drizzle\n        });\n        break;\n\n      case rangeId >= 500 && rangeId <= 531:\n        this.setState({\n          icon: this.weatherIcon.Rain\n        });\n        break;\n\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({\n          icon: this.weatherIcon.Snow\n        });\n        break;\n\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({\n          icon: this.weatherIcon.Atmosphere\n        });\n        break;\n\n      case rangeId === 800:\n        this.setState({\n          icon: this.weatherIcon.Clear\n        });\n        break;\n\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({\n          icon: this.weatherIcon.Clouds\n        });\n        break;\n\n      default:\n        this.setState({\n          icon: this.weatherIcon.clouds\n        });\n    }\n  }\n\n  calCelsius(temp) {\n    let cel = Math.floor(temp - 273.15);\n    return cel;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"  Weather App\"), React.createElement(Weather, {\n      city: this.state.city,\n      country: this.state.country,\n      lat: this.state.lat,\n      long: this.state.long,\n      temp_celsius: this.state.celsius,\n      temp_min: this.state.temp_min,\n      temp_max: this.state.temp_max,\n      description: this.state.description,\n      weatherIcon: this.state.icon,\n      ip: this.state.ip,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Weatherrep;","map":{"version":3,"sources":["/Users/vishnu/Desktop/react/news-webapp/src/components/weather-rep.components.jsx"],"names":["React","Weather","Form","API_KEY","Weatherrep","Component","constructor","getWeather","e","preventDefault","ip_api_call","fetch","ip_response","json","console","log","ip","state","det_api_call","det_response","setState","lat","undefined","long","city","country","icon","main","celsius","temp_max","temp_min","description","error","err","weatherIcon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","get_WeatherIcon","icons","rangeId","clouds","calCelsius","temp","cel","Math","floor","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './weather-rep.scss';\nimport Weather from \"./weather\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Form from \"./form\";\n\nconst API_KEY = \"c6495ff8b8839c36a2991986616d8307\";\n\n// wolframwapha AppID=888UUR-X3TPQ8UGYP\n//https://api.ipify.org?format=json\n//curl https://ipapi.co/8.8.8.8/latlong/\n//http://ip-api.com/json/24.48.0.1\n\nclass Weatherrep extends React.Component {\n  constructor(){\n    super();\n    this.state={\n      lat: undefined,\n      long: undefined,\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      err: false, \n      ip:undefined,\n    };\n    this.weatherIcon={\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n    this.getWeather();\n  }\n\n  get_WeatherIcon(icons,rangeId){\n    switch(true){\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({icon: this.weatherIcon.Thunderstorm});\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({icon: this.weatherIcon.Drizzle});\n        break;\n      case rangeId >= 500 && rangeId <= 531:\n        this.setState({icon: this.weatherIcon.Rain});\n        break;\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({icon: this.weatherIcon.Snow});\n        break;\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({icon: this.weatherIcon.Atmosphere});\n        break;\n      case rangeId === 800:\n        this.setState({icon: this.weatherIcon.Clear});\n        break;\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({icon: this.weatherIcon.Clouds});\n        break;\n      default:\n        this.setState({icon: this.weatherIcon.clouds});\n\n    }\n  }\n\n  calCelsius(temp){\n    let cel = Math.floor(temp - 273.15);\n    return cel;\n  }\n\n  getWeather = async(e) => {\n    e.preventDefault();\n    \n    const ip_api_call = await fetch(`https://api.ipify.org?format=json`);\n    const ip_response= await ip_api_call.json();\n    console.log(ip_response);\n    const ip= this.state.ip;\n      \n    const det_api_call = await fetch(`http://ip-api.com/json/${ip}`);\n    const det_response= await det_api_call.json();\n    console.log(det_response);\n\n    // const city = \n    // const country = \n    // if( city && country ) {\n    // const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}`);\n    // const response= await api_call.json();\n    // console.log(response);\n\n    this.setState({\n    //   city: `${response.name},${response.sys.country}`,\n    //   lat: response.coord.lat,\n    //   long: response.coord.lon,\n    //   celsius: this.calCelsius(response.main.temp),\n    //   temp_min: this.calCelsius(response.main.temp_min),\n    //   temp_max: this.calCelsius(response.main.temp_max),\n    //   description: response.weather[0].description,\n    lat: undefined,\n    long: undefined,\n    city: undefined,\n    country: undefined,\n    icon: undefined,\n    main: undefined,\n    celsius: undefined,\n    temp_max: undefined,\n    temp_min: undefined,\n    description: \"\",\n    error: false,\n    ip: ip_response.ip\n    });\n  };\n\n  render() {\n    return(\n      <div className=\"App\">\n        <h1 className=\"App-header\">  Weather App</h1>\n\n        <Weather \n        city={this.state.city} \n        country={this.state.country}\n        lat={this.state.lat} \n        long={this.state.long}\n        temp_celsius={this.state.celsius}\n        temp_min={this.state.temp_min}\n        temp_max={this.state.temp_max}\n        description={this.state.description}\n        weatherIcon={this.state.icon}\n        ip={this.state.ip}\n        />  \n      </div>\n    );\n  }\n}\n\n\nexport default Weatherrep;\n"]},"metadata":{},"sourceType":"module"}