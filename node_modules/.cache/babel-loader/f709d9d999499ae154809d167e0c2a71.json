{"ast":null,"code":"var _jsxFileName = \"/Users/vishnu/Desktop/react/news-webapp/src/components/weather-rep.components.jsx\";\nimport React from 'react';\nimport './weather-rep.scss';\nimport Weather from \"./weather\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Form from \"./form\";\nconst API_KEY = \"c6495ff8b8839c36a2991986616d8307\"; // wolframwapha AppID=888UUR-X3TPQ8UGYP\n//https://api.ipify.org?format=json\n//curl https://ipapi.co/8.8.8.8/latlong/\n//http://ip-api.com/json/24.48.0.1\n\nclass Weatherrep extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value;\n\n      if (city && country) {\n        const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}`);\n        const response = await api_call.json();\n        console.log(response);\n        this.setState({\n          city: `${response.name},${response.sys.country}`,\n          lat: response.coord.lat,\n          long: response.coord.lon,\n          celsius: this.calCelsius(response.main.temp),\n          temp_min: this.calCelsius(response.main.temp_min),\n          temp_max: this.calCelsius(response.main.temp_max),\n          description: response.weather[0].description,\n          error: false\n        });\n        this.get_WeatherIcon(this.weatherIcon, response.weather[0].id);\n      } else {\n        this.setState({\n          error: true\n        });\n      }\n    };\n\n    this.getIP = async e => {\n      e.preventDefault();\n      const ip_api_call = await fetch(`https://api.ipify.org?format=json`);\n      const ip_response = await ip_api_call.json();\n      console.log(ip_response);\n      this.setState({\n        ip: ip_response.ip\n      });\n    };\n\n    this.state = {\n      lat: undefined,\n      long: undefined,\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      err: false,\n      ip: undefined\n    };\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n  }\n\n  get_WeatherIcon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({\n          icon: this.weatherIcon.Thunderstorm\n        });\n        break;\n\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({\n          icon: this.weatherIcon.Drizzle\n        });\n        break;\n\n      case rangeId >= 500 && rangeId <= 531:\n        this.setState({\n          icon: this.weatherIcon.Rain\n        });\n        break;\n\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({\n          icon: this.weatherIcon.Snow\n        });\n        break;\n\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({\n          icon: this.weatherIcon.Atmosphere\n        });\n        break;\n\n      case rangeId === 800:\n        this.setState({\n          icon: this.weatherIcon.Clear\n        });\n        break;\n\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({\n          icon: this.weatherIcon.Clouds\n        });\n        break;\n\n      default:\n        this.setState({\n          icon: this.weatherIcon.clouds\n        });\n    }\n  }\n\n  calCelsius(temp) {\n    let cel = Math.floor(temp - 273.15);\n    return cel;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"  Weather App\"), React.createElement(Form, {\n      loadWeather: this.getIP,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      city: this.state.city,\n      country: this.state.country,\n      lat: this.state.lat,\n      long: this.state.long,\n      temp_celsius: this.state.celsius,\n      temp_min: this.state.temp_min,\n      temp_max: this.state.temp_max,\n      description: this.state.description,\n      weatherIcon: this.state.icon,\n      ip: this.state.ip,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Weatherrep;","map":{"version":3,"sources":["/Users/vishnu/Desktop/react/news-webapp/src/components/weather-rep.components.jsx"],"names":["React","Weather","Form","API_KEY","Weatherrep","Component","constructor","getWeather","e","preventDefault","city","target","elements","value","country","api_call","fetch","response","json","console","log","setState","name","sys","lat","coord","long","lon","celsius","calCelsius","main","temp","temp_min","temp_max","description","weather","error","get_WeatherIcon","weatherIcon","id","getIP","ip_api_call","ip_response","ip","state","undefined","icon","err","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","icons","rangeId","clouds","cel","Math","floor","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './weather-rep.scss';\nimport Weather from \"./weather\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Form from \"./form\";\n\nconst API_KEY = \"c6495ff8b8839c36a2991986616d8307\";\n\n// wolframwapha AppID=888UUR-X3TPQ8UGYP\n//https://api.ipify.org?format=json\n//curl https://ipapi.co/8.8.8.8/latlong/\n//http://ip-api.com/json/24.48.0.1\n\nclass Weatherrep extends React.Component {\n  constructor(){\n    super();\n    this.state={\n      lat: undefined,\n      long: undefined,\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      err: false, \n      ip:undefined,\n    };\n    this.weatherIcon={\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n  }\n\n  get_WeatherIcon(icons,rangeId){\n    switch(true){\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({icon: this.weatherIcon.Thunderstorm});\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({icon: this.weatherIcon.Drizzle});\n        break;\n      case rangeId >= 500 && rangeId <= 531:\n        this.setState({icon: this.weatherIcon.Rain});\n        break;\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({icon: this.weatherIcon.Snow});\n        break;\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({icon: this.weatherIcon.Atmosphere});\n        break;\n      case rangeId === 800:\n        this.setState({icon: this.weatherIcon.Clear});\n        break;\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({icon: this.weatherIcon.Clouds});\n        break;\n      default:\n        this.setState({icon: this.weatherIcon.clouds});\n\n    }\n  }\n\n  calCelsius(temp){\n    let cel = Math.floor(temp - 273.15);\n    return cel;\n  }\n\n  getWeather = async(e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value; \n    if( city && country ) {\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}`);\n    const response= await api_call.json();\n    console.log(response);\n\n    this.setState({\n      city: `${response.name},${response.sys.country}`,\n      lat: response.coord.lat,\n      long: response.coord.lon,\n      celsius: this.calCelsius(response.main.temp),\n      temp_min: this.calCelsius(response.main.temp_min),\n      temp_max: this.calCelsius(response.main.temp_max),\n      description: response.weather[0].description,\n      error: false\n    });\n      this.get_WeatherIcon(this.weatherIcon,response.weather[0].id);\n  }\n    else{\n      this.setState({error: true});\n    }\n\n  };\n\n  getIP = async(e) => {\n    e.preventDefault();\n    const ip_api_call = await fetch(`https://api.ipify.org?format=json`);\n    const ip_response= await ip_api_call.json();\n    console.log(ip_response);\n    this.setState({\n        ip: ip_response.ip\n      });\n  }\n  render(){\n    return(\n      <div className=\"App\">\n        <h1 className=\"App-header\">  Weather App</h1>\n        <Form loadWeather={this.getIP} error={this.state.error}/>\n        <Weather \n        city={this.state.city} \n        country={this.state.country}\n        lat={this.state.lat} \n        long={this.state.long}\n        temp_celsius={this.state.celsius}\n        temp_min={this.state.temp_min}\n        temp_max={this.state.temp_max}\n        description={this.state.description}\n        weatherIcon={this.state.icon}\n        ip={this.state.ip}\n        />  \n      </div>\n    );\n  }\n}\n\n\nexport default Weatherrep;\n"]},"metadata":{},"sourceType":"module"}